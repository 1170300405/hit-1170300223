<!DOCTYPE html>
<html>

<head>
  <title>Weekly voca</title>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <script src="https://cdn.jsdelivr.net/npm/vue@2.5.16/dist/vue.js"></script>
  <script src="https://unpkg.com/axios/dist/axios.min.js"></script>

  <style>
    body {
      font-family: Menlo, Consolas, monospace;
      color: azure;
      background-color: #666;
    }

    .item {
      cursor: pointer;
    }

    .bold {
      font-weight: bold;
    }

    ul {
      padding-left: 1em;
      line-height: 1.5em;
      list-style-type: none;
      background-color: #444;
      border-style: ridge;
    }

    textarea {
      width: 100%;
      height: 6em;
      background-color: #444;
      color: azure
    }
  </style>
</head>

<body>
  <script type="text/x-template" id="item-template">
        <li>
            <div :class="{bold: isFolder}" @click="toggle">
            <p>{{ index }}<span v-if="isFolder">[{{ isOpen ? '-' : '+' }}]</span></p>
            </div>
            <ul  v-show="isOpen" v-if="isFolder" v-for="(child,childIndex) in item">
                <tree-item class="item" v-if="child instanceof Object" :key="String(childIndex)" :item="child" :index="childIndex"></tree-item>
                <p v-else>{{childIndex}}: {{child}}</p>
            </ul>
            <p v-if="!isFolder">{{item}}</p>
        </li>
    </script>

  <div id="demo">
    <textarea v-model="input"></textarea>
    <ul v-for="(word,index) in treeData">
      <tree-item class="item" :item="word" :index="String(index)"></tree-item>
    </ul>
  </div>

  <script>
    "use strict"

    Vue.component('tree-item', {
      template: '#item-template',
      props: {
        index: String,
        item: Object
      },
      data: function () {
        return {
          isOpen: false
        }
      },
      computed: {
        isFolder: function () {
          return this.item instanceof Object
        }
      },
      methods: {
        toggle: function () {
          if (this.isFolder) {
            this.isOpen = !this.isOpen
          }
        }
      }
    })


    const demo = new Vue({
      el: '#demo',
      data: {
        input: '{"status":"loading"}',
        treeData: Object
      },
      created: function () {
        axios.get("words_in_spoc.json")
          .then(response => {
            this.treeData = response.data;
            this.input = JSON.stringify(this.treeData);
          });

      },
      watch: {
        input: function (newInput, oldInput) {
          this.treeData = JSON.parse(String(newInput));
        }
      },
    });

  </script>

</body>